<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="about.Text" xml:space="preserve">
    <value>关于</value>
  </data>
  <data name="App" xml:space="preserve">
    <value>扫雷S</value>
  </data>
  <data name="AppName.Text" xml:space="preserve">
    <value>扫雷 S</value>
  </data>
  <data name="backimg.Header" xml:space="preserve">
    <value>背景图片（重新启动应用生效）：</value>
  </data>
  <data name="CTN.Header" xml:space="preserve">
    <value>当前主题：</value>
  </data>
  <data name="haschsen.Text" xml:space="preserve">
    <value>我们已经为你选择合适的主题</value>
  </data>
  <data name="howToPlay.Text" xml:space="preserve">
    <value>游戏的基本操作包括左键单击、右键单击(手机长按)、双击三种。

左键用于打开安全的格子，推进游戏进度；右键（长按）用于标记地雷,以辅助判断，或为接下来的双击做准备；
双击在一个数字周围的地雷标记完时，相当于对数字周围未打开的方块均进行一次左键单击操作，若数字周围有标错的地雷，则游戏结束

雷诀八条
第一条：基本定式不要忘，现场推理真够呛
第二条：鼠标点击不要快，稳定节奏把空开。
第三条：顺手标雷不要惯，积累下来记录悬。
第四条：无从下手不要愣，就近猜雷把心横。
第五条：遇到猜雷不要怕，爆了脸上不留疤。
第六条：猜雷猜错不要悔，哭天抢地也白费。
第七条：碰上好局不要慌，紧盯局部慢扩张。
第八条：痛失好局不要恨，既然有缘定有份。</value>
  </data>
  <data name="IsNFE.Header" xml:space="preserve">
    <value>数字背景：</value>
  </data>
  <data name="next.Content" xml:space="preserve">
    <value>下一步</value>
  </data>
  <data name="privacy.Content" xml:space="preserve">
    <value>隐私声明</value>
  </data>
  <data name="ThemeSet.Text" xml:space="preserve">
    <value>主题设置</value>
  </data>
  <data name="using.Header" xml:space="preserve">
    <value>引用</value>
  </data>
  <data name="using.Text" xml:space="preserve">
    <value>Win2D;UI Dev;UWP Toolkit....</value>
  </data>
  <data name="ver.Header" xml:space="preserve">
    <value>版本</value>
  </data>
  <data name="welcome.Text" xml:space="preserve">
    <value>欢迎</value>
  </data>
  <data name="Achieve.Text" xml:space="preserve">
    <value>成就</value>
  </data>
  <data name="Height.Text" xml:space="preserve">
    <value>高度</value>
  </data>
  <data name="Num.Text" xml:space="preserve">
    <value>数量</value>
  </data>
  <data name="Width.Text" xml:space="preserve">
    <value>宽度</value>
  </data>
  <data name="LostB" xml:space="preserve">
    <value>踩到10次雷</value>
  </data>
  <data name="LostBc" xml:space="preserve">
    <value>出师不利</value>
  </data>
  <data name="LostG" xml:space="preserve">
    <value>踩到1000次雷</value>
  </data>
  <data name="LostGc" xml:space="preserve">
    <value>”千“折不挠</value>
  </data>
  <data name="LostL" xml:space="preserve">
    <value>踩到100次雷</value>
  </data>
  <data name="LostLc" xml:space="preserve">
    <value>霉运当头</value>
  </data>
  <data name="get" xml:space="preserve">
    <value>获得了</value>
  </data>
  <data name="IClickB" xml:space="preserve">
    <value>点击超过10次</value>
  </data>
  <data name="IClickBc" xml:space="preserve">
    <value>点击菜鸟</value>
  </data>
  <data name="IClickG" xml:space="preserve">
    <value>点击超过1000次</value>
  </data>
  <data name="IClickGc" xml:space="preserve">
    <value>点击大师</value>
  </data>
  <data name="IClickL" xml:space="preserve">
    <value>点击超过100次</value>
  </data>
  <data name="IClickLc" xml:space="preserve">
    <value>点击专家</value>
  </data>
  <data name="WinnerB" xml:space="preserve">
    <value>胜利超过10次</value>
  </data>
  <data name="WinnerBc" xml:space="preserve">
    <value>胜利菜鸟</value>
  </data>
  <data name="WinnerG" xml:space="preserve">
    <value>胜利超过1000次</value>
  </data>
  <data name="WinnerGc" xml:space="preserve">
    <value>胜利大师</value>
  </data>
  <data name="WinnerL" xml:space="preserve">
    <value>胜利超过100次</value>
  </data>
  <data name="WinnerLc" xml:space="preserve">
    <value>胜利专家</value>
  </data>
  <data name="APT.Header" xml:space="preserve">
    <value>总游戏时间</value>
  </data>
  <data name="AS.Header" xml:space="preserve">
    <value>总分</value>
  </data>
  <data name="CT.Header" xml:space="preserve">
    <value>点击次数</value>
  </data>
  <data name="GOT.Header" xml:space="preserve">
    <value>失败次数</value>
  </data>
  <data name="InfoButton.Content" xml:space="preserve">
    <value>更多信息</value>
  </data>
  <data name="LPT.Header" xml:space="preserve">
    <value>最长游戏时间</value>
  </data>
  <data name="MS.Header" xml:space="preserve">
    <value>最高分</value>
  </data>
  <data name="SBAC.Header" xml:space="preserve">
    <value>显示图片背景</value>
  </data>
  <data name="WT.Header" xml:space="preserve">
    <value>胜利次数</value>
  </data>
  <data name="Support.Text" xml:space="preserve">
    <value>支持我们</value>
  </data>
</root>